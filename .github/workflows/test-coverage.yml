name: Tests with Coverage

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dev_requirements.txt
        pip install -e .
    
    - name: Run tests with coverage
      run: |
        coverage run -m pytest
        coverage xml  # generates coverage.xml
    
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      if: matrix.python-version == '3.11'  # Only upload coverage once
      with:
        format: cobertura
        file: coverage.xml
        github-token: ${{ secrets.GITHUB_TOKEN }}

  test-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r dev_requirements.txt
        pip install -e .
    
    - name: Run tests with detailed coverage
      run: |
        pytest --cov=src/crossmark_jotform_api --cov-report=term-missing --cov-report=xml --cov-branch -v
    
    - name: Upload coverage to Codecov (alternative)
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false